#include "sample/sample_launcher.h"
#include "gles_sample.h"

#include "sample/coloring_view.h"
#include "sample/frag_lighting_view.h"
#include "sample/normal_mapping_view.h"

SampleLauncher* SampleLauncher::instance = NULL;

SampleLauncher::SampleLauncher() :
	curView(NULL),
	mParent(NULL)
{
}

SampleLauncher::~SampleLauncher()
{
	if (instance)
		delete instance;
}

SampleLauncher* SampleLauncher::GetInstance()
{
	if (!instance)
	{
		instance = new SampleLauncher();
	}
	return instance;
}

void SampleLauncher::Release()
{
	if (curView)
	{
		delete curView;
		curView = NULL;
	}

	if (instance)
	{
		delete instance;
		instance = NULL;
	}
}

Evas_Object* SampleLauncher::InitSampleView(void* data)
{
	appdata_s* ad = static_cast<appdata_s *>(data);
	int sampleNum = ad->cur_sample_num;

	mParent = ad->win;

	if (curView)
	{
		delete curView;
		curView = NULL;
	}

	switch (sampleNum)
	{
	case 0:
		break;
	case 1:
		curView = new ColoringView(ad);
		break;
	case 2:
		curView = new FragLightingView(ad);
		break;
	case 3:
		curView = new NormalMappingView(ad);
		break;
	default:
		break;
	}

	return curView->GetGLView();
}

static void
create_popup(Evas_Object *parent) {
	Evas_Object *popup;

	popup = elm_popup_add(parent);
	elm_popup_align_set(popup, ELM_NOTIFY_ALIGN_FILL, 1.0);
	eext_object_event_callback_add(popup, EEXT_CALLBACK_BACK, eext_popup_back_cb, parent);
	evas_object_size_hint_weight_set(popup, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
	elm_object_style_set(popup, "toast");
	elm_object_text_set(popup, "Welcome!");

	evas_object_show(popup);
}

